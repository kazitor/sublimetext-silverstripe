%YAML 1.2
---
# See http://www.sublimetext.com/docs/3/syntax.html
name: Silverstripe
file_extensions:
  - ss
scope: text.silverstripe
contexts:
  main:
    - match: ""
      push: "Packages/HTML/HTML.sublime-syntax"
      with_prototype:
        - match: \\\$
          scope: constant.character.escape.silverstripe
        - match: \$
          scope: punctuation.definition.variable.silverstripe
          push: variable
        - match: '<%--'
          scope: punctuation.definition.comment.begin.silverstripe
          push: comment
        - match: '<%'
          push: templatefunc

  templatefunc:
    - match: \b(end_)?(loop|with)\b
      scope: keyword.control.silverstripe
    - match: \b(if|else_if|else|end_if)\b
      scope: keyword.control.conditional.silverstripe
    - match: \b(require|import)\b
      scope: keyword.control.import.silverstripe
    - match: \b(not|and|or|&&|\|\|)\b
      scope: keyword.operator.logical.silverstripe
    - match: \b(\<=?|>=?|==)\b
      scope: keyword.operator.comparison.silverstripe
    - match: \bbase_tag\b
      scope: support.constant.silverstripe
    - match: \$
      scope: punctuation.definition.variable.silverstripe
      push: variable
      captures:
        1: punctuation.definition.variable.silverstripe
    - match: '%>'
      pop: true

  variable:
    - meta_content_scope: meta.qualified-name.silverstripe
    - match: (\.)?([[:alpha:]_][[:alnum:]_]*)\(
      captures:
        1: punctuation.accessor.silverstripe
        2: variable.function.silverstripe
      push:
        - match: ','
          scope: punctuation.separator.silverstripe
        - match: -?\d+(\.\d+)?
          scope: constant.numeric.silverstripe
        - match: (true|false)
          scope: constant.language
        - match: '[[:alpha:]_][[:alnum:]_]*'
          scope: string.unquoted.silverstripe
        - match: "'"
          scope: punctuation.definition.string.begin.silverstripe
          push:
            - meta_scope: string.quoted.single.silverstripe
            - match: '\\.'
              scope: constant.character.escape.silverstripe
            - match: "'"
              scope: punctuation.definition.string.end.silverstripe
              pop: true
        - match: '"'
          scope: punctuation.definition.string.begin.silverstripe
          push:
            - meta_scope: string.quoted.single.silverstripe
            - match: '\\.'
              scope: constant.character.escape.silverstripe
            - match: '"'
              scope: punctuation.definition.string.end.silverstripe
              pop: true
        - match: '\)'
          pop: true
    - match: (\.)?([[:alpha:]_][[:alnum:]_]*)
      captures:
        1: punctuation.accessor.silverstripe
        2: meta.generic-name.silverstripe
    - match: (?![[:alnum:]_]|\.)
      pop: true

  comment:
    - meta_scope: comment.block.silverstripe
    - match: '--%>'
      scope: punctuation.definition.comment.end.silverstripe
      pop: true
